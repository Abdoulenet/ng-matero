// ----------------------------------------------------------------------------
// MATERIAL COLORS
// ----------------------------------------------------------------------------

$mat-colors: (
  'red': $mat-red,
  'pink': $mat-pink,
  'purple': $mat-purple,
  'deep-purple': $mat-deep-purple,
  'indigo': $mat-indigo,
  'blue': $mat-blue,
  'light-blue': $mat-light-blue,
  'cyan': $mat-cyan,
  'teal': $mat-teal,
  'green': $mat-green,
  'light-green': $mat-light-green,
  'lime': $mat-lime,
  'yellow': $mat-yellow,
  'amber': $mat-amber,
  'orange': $mat-orange,
  'deep-orange': $mat-deep-orange,
  'brown': $mat-brown,
  'gray': $mat-gray,
  'blue-gray': $mat-blue-gray,
);

// contrast color
$contrast-colors: (
  "text-color": (
    property: color,
    class: text,
    values: (
      white: white,
      black: black,
      light: $light-primary-text, // material variable
      dark: $dark-primary-text, // material variable
    )
  ),
  "bg-color": (
    property: background-color,
    class: bg,
    values: (
      white: white,
      black: black
    )
  ),
);

$utilities: map-merge(
  $contrast-colors,
  $utilities
);

// Generate Text Color
@each $name, $value in $mat-colors {
  @each $hue, $color in $value {
    @if ($hue != 'contrast') {
      .#{'text-' + $name + '-' + $hue} {
        color: $color !important;
      }
    }
    // alias
    @if ($name == 'gray') {
      .#{'text-grey-' + $hue} {
        @extend .#{'text-gray-' + $hue} !optional;
      }
    }
  }
}

// Generate Background Color
@each $name, $value in $mat-colors {
  @each $hue, $color in $value {
    @if ($hue != 'contrast') {
      .#{'bg-' + $name + '-' + $hue} {
        background-color: $color !important;
      }
    }
    // alias
    @if ($name == 'gray') {
      .#{'bg-grey-' + $hue} {
        @extend .#{'bg-gray-' + $hue} !optional;
      }
    }
  }
}

